---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import ContactCTA from "../../components/ContactCTA.astro";
import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import Pill from "../../components/Pill.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="stack gap-20">
    <div class="stack gap-15">
      <header>
        <div class="wrapper stack gap-2">
          <a class="back-link" href="/work/"
            ><Icon icon="arrow-left" /> Projets</a
          >
          <Hero title={entry.data.title} align="start">
            <div class="details">
              <div class="tags">
                {entry.data.tags.map((t) => <Pill>{t}</Pill>)}
              </div>
              <p class="description">{entry.data.description}</p>
            </div>
          </Hero>
        </div>
      </header>
      <main class="wrapper">
        <div class="stack gap-10 content">
          {
            entry.data.img &&
              (entry.data.externalUrl ? (
                <a
                  href={entry.data.externalUrl}
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <img
                    src={entry.data.img}
                    alt={entry.data.img_alt || ""}
                    class="rounded-xl shadow-lg mx-auto"
                  />
                </a>
              ) : (
                <img
                  src={entry.data.img}
                  alt={entry.data.img_alt || ""}
                  class="rounded-xl shadow-lg mx-auto"
                />
              ))
          }

          <div class="content">
            <Content />
          </div>
        </div>
      </main>
    </div>
    <ContactCTA />
  </div>
</BaseLayout>

<style>
  /* Header volta a ser normal (nÃ£o sticky) */
  header,
  .wrapper,
  .stack {
    overflow: visible !important;
    transform: none !important;
  }
  /* Oculta no mobile */
  .back-link {
    display: none;
  }

  /* Exibe e fixa em desktop */
  @media (min-width: 50em) {
    .back-link {
      display: block;
      position: fixed;
      top: 8rem; /* aumente este valor para descer mais ainda */
      left: 1rem; /* ajuste lateral se quiser */
      z-index: 10000;
      pointer-events: auto;

      background: var(--background);
      padding: 0.25rem 0.5rem;
      border-radius: 0.25rem;

      text-decoration: 1px solid underline transparent;
      text-underline-offset: 0.25em;
      transition: text-decoration-color var(--theme-transition);
      color: inherit;
    }
    .back-link:hover,
    .back-link:focus {
      text-decoration-color: currentColor;
    }
  }

  .details {
    display: flex;
    flex-direction: column;
    padding: 0.5rem;
    gap: 1.5rem;
    justify-content: space-between;
    align-items: center;
  }
  .tags {
    display: none;
  }
  @media (min-width: 50em) {
    .tags {
      display: flex;
      gap: 0.5rem;
    }
  }
  .description {
    font-size: var(--text-lg);
    max-width: 54ch;
  }

  .content {
    max-width: 65ch;
    margin-inline: auto;
  }

  .content > :global(* + *) {
    margin-top: 1rem;
  }

  .content :global(h1),
  .content :global(h2),
  .content :global(h3),
  .content :global(h4),
  .content :global(h5) {
    margin: 1.5rem 0;
  }

  .content :global(img) {
    border-radius: 1.5rem;
    box-shadow: var(--shadow-sm);
    background: var(--gradient-subtle);
    border: 1px solid var(--gray-800);
  }

  .content :global(blockquote) {
    font-size: var(--text-lg);
    font-family: var(--font-brand);
    font-weight: 600;
    line-height: 1.1;
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid var(--accent-dark);
    color: var(--gray-0);
  }

  @media (min-width: 50em) {
    .details {
      flex-direction: row;
      gap: 2.5rem;
    }

    .content :global(blockquote) {
      font-size: var(--text-2xl);
    }
  }
</style>
